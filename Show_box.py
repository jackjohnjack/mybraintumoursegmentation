import numpy as np
from matplotlib import pyplot as plt

IOU_bas = np.array([[0.5720146,  0.8350541,  0.6999434 ],
 [0.58473647, 0.6959952,  0.5530902 ],
 [0.88315755, 0.83986986, 0.60857654],
 [0.68228215, 0.17102669, 0.7336123 ],
 [0.77157456, 0.8672606,  0.6805895 ],
 [0.7873479,  0.7078641,  0.7116441 ],
 [0.7829323,  0.87273157, 0.69956833],
 [0.84488094, 0.46376052, 0.64483833],
 [0.8717306,  0.88541806, 0.7104244 ],
 [0.7137315,  0.3133697,  0.34026465],
 [0.7316449,  0.8085953,  0.65400386],
 [0.82205725, 0.8665507,  0.772361  ],
 [0.8390888,  0.8676068,  0.7201451 ],
 [0.85916615, 0.8184542,  0.6460936 ],
 [0.84863436, 0.74166465, 0.5199193 ],
 [0.6782312,  0.75323373, 0.65208894],
 [0.83522385, 0.8603651,  0.8176887 ],
 [0.8192131,  0.57047945, 0.6286784 ],
 [0.7974052,  0.6664258,  0.52826726],
 [0.8404884,  0.8293913,  0.77927667],
 [0.9182436,  0.8889963,  0.6798099 ],
 [0.5996379,  0.90228117, 0.8473854 ],
 [0.8449362,  0.81548476, 0.7110348 ],
 [0.860941,   0.79094887, 0.7515404 ],
 [0.8881663,  0.81863946, 0.83406395],
 [0.9153334,  0.83324295, 0.7993262 ],
 [0.9267924,  0.8946191,  0.9068929 ],
 [0.83749604, 0.429632,   0.51970094],
 [0.8790502,  0.8070317,  0.7150797 ],
 [0.74869126, 0.79929906, 0.73177576],
 [0.82334256, 0.61577755, 0.5644315 ],
 [0.9291761,  0.50284666, 0.8801598 ],
 [0.74925786, 0.20438994, 0.0        ]])


Dice_bas = np.array([[0.7277472,  0.9101139,  0.82349026],
 [0.7379605,  0.82075137, 0.7122448 ],
 [0.93795395, 0.9129666,  0.7566647 ],
 [0.8111388,  0.292097,   0.8463395 ],
 [0.8710608,  0.9289122,  0.8099414 ],
 [0.88102365, 0.82894665, 0.83153284],
 [0.87825245, 0.9320413,  0.8232306 ],
 [0.9159192,  0.63365626, 0.784075  ],
 [0.93147016, 0.9392273,  0.83069956],
 [0.8329561,  0.47719952, 0.5077574 ],
 [0.8450288,  0.8941694,  0.79081297],
 [0.90233964, 0.9285049,  0.8715617 ],
 [0.912505,   0.92911077, 0.8373074 ],
 [0.92424893, 0.9001648,  0.78500223],
 [0.9181203,  0.8516733,  0.6841406 ],
 [0.8082691,  0.8592508,  0.7894114 ],
 [0.9102147,  0.9249422,  0.8997016 ],
 [0.90062356, 0.72650355, 0.77201045],
 [0.8872848,  0.79982656, 0.69132835],
 [0.91333187, 0.9067402,  0.8759477 ],
 [0.9573795,  0.9412367,  0.8093891 ],
 [0.74971706, 0.94863075, 0.91738886],
 [0.91595167, 0.89836586, 0.8311167 ],
 [0.9252749,  0.88327354, 0.858148  ],
 [0.9407713,  0.90027684, 0.9095255 ],
 [0.9557954,  0.9090371,  0.8884728 ],
 [0.96200544, 0.94437885, 0.9511734 ],
 [0.91156226, 0.60103863, 0.6839516 ],
 [0.93563247, 0.89321256, 0.83387345],
 [0.85628754, 0.88845605, 0.8451161 ],
 [0.9031134,  0.76220584, 0.7215803 ],
 [0.963288,   0.66919225, 0.93626064],
 [0.856658,   0.33940825, 0.0        ]])



IOU_res = np.array([[0.5865433,  0.8386036,  0.7266722 ],
 [0.5920658,  0.69502395, 0.5593788 ],
 [0.85264295, 0.7864565,  0.68148464],
 [0.7074074,  0.5829217,  0.5484387 ],
 [0.720054,   0.79238945, 0.6812893 ],
 [0.7066673,  0.70635027, 0.7185352 ],
 [0.80997646, 0.8906513,  0.74120337],
 [0.7703557,  0.72788256, 0.6490582 ],
 [0.89024436, 0.9126126,  0.7272837 ],
 [0.6098464,  0.49618813, 0.4124098 ],
 [0.78791136, 0.86707824, 0.6983419 ],
 [0.7678504,  0.8722436,  0.7940163 ],
 [0.87809795, 0.84799135, 0.74716115],
 [0.8629152,  0.8055112,  0.6299824 ],
 [0.8492243,  0.90278274, 0.54186857],
 [0.6371748,  0.75030184, 0.7086749 ],
 [0.8576699,  0.90229756, 0.8286328 ],
 [0.8917881,  0.6378142,  0.7038166 ],
 [0.68986243, 0.34736985, 0.42293307],
 [0.86973137, 0.8702641,  0.8078891 ],
 [0.8933721,  0.8955668,  0.6969194 ],
 [0.5614968,  0.9011839,  0.8424601 ],
 [0.8138387,  0.8611896,  0.75506973],
 [0.87277335, 0.76324725, 0.81570995],
 [0.9222462,  0.864328,   0.82830846],
 [0.8740065,  0.7376624,  0.6912993 ],
 [0.9319902,  0.92456007, 0.9331328 ],
 [0.81795233, 0.7739439,  0.78988457],
 [0.8849454,  0.89070773, 0.78608793],
 [0.64905334, 0.8143969,  0.75114614],
 [0.82544625, 0.2725962,  0.5493827 ],
 [0.91899526, 0.54907566, 0.8593252 ],
 [0.7615875,  0.57463753, 0.0        ]])


Dice_res = np.array([[0.7393978,  0.9122179,  0.8417025 ],
 [0.74377054, 0.8200757,  0.717438  ],
 [0.9204612,  0.8804653,  0.81057495],
 [0.8286334,  0.7365136,  0.7083764 ],
 [0.8372458,  0.88417107, 0.8104367 ],
 [0.8281254,  0.8279077,  0.8362182 ],
 [0.8950133,  0.94216347, 0.8513691 ],
 [0.87028354, 0.8425139,  0.78718656],
 [0.9419357,  0.95430994, 0.84211266],
 [0.7576454,  0.6632697,  0.5839804 ],
 [0.8813763,  0.9288076,  0.82238084],
 [0.86868256, 0.93176293, 0.8851829 ],
 [0.9350928,  0.91774386, 0.8552859 ],
 [0.92641383, 0.89228046, 0.7729929 ],
 [0.91846544, 0.94890785, 0.7028726 ],
 [0.7783833,  0.85734,    0.82950234],
 [0.92338246, 0.9486398,  0.90628666],
 [0.94279915, 0.7788603,  0.8261647 ],
 [0.8164717,  0.51562655, 0.5944525 ],
 [0.9303276,  0.9306323,  0.8937375 ],
 [0.9436836,  0.9449066,  0.82139367],
 [0.7191776,  0.9480239,  0.9144948 ],
 [0.89736617, 0.92541844, 0.8604441 ],
 [0.9320651,  0.8657291,  0.89850247],
 [0.95955056, 0.92722744, 0.9060927 ],
 [0.93276787, 0.84902847, 0.81747717],
 [0.9647981,  0.9608015,  0.96540993],
 [0.89986116, 0.8725686,  0.88260955],
 [0.9389613,  0.94219506, 0.8802343 ],
 [0.7871829,  0.8977054,  0.85789084],
 [0.9043775,  0.4284096,  0.70916337],
 [0.95778793, 0.7089075,  0.9243409 ],
 [0.86466044, 0.72986645, 0.0        ]])


IOU_att = np.array([[0.6020444,  0.72740525, 0.6571566 ],
 [0.635856,   0.7290136,  0.58592135],
 [0.8737465,  0.8161768,  0.6659957 ],
 [0.7029962,  0.12274112, 0.46616542],
 [0.7396026,  0.81033325, 0.6447889 ],
 [0.7514528,  0.69290763, 0.6497322 ],
 [0.82638025, 0.8878961,  0.7356184 ],
 [0.80176574, 0.56214577, 0.61662376],
 [0.87552905, 0.7924658,  0.6654996 ],
 [0.65468335, 0.4369144,  0.36287704],
 [0.77899754, 0.86657804, 0.70690143],
 [0.79137737, 0.85797757, 0.7570243 ],
 [0.88398635, 0.879038,   0.7705536 ],
 [0.84693074, 0.8042137,  0.6499274 ],
 [0.83115894, 0.8054468,  0.49318916],
 [0.65830326, 0.73575497, 0.6610367 ],
 [0.86331606, 0.85566646, 0.81053674],
 [0.91201377, 0.68730795, 0.73033375],
 [0.7995681,  0.72021,    0.57841295],
 [0.8578672,  0.787517,   0.71962   ],
 [0.88972974, 0.8890211,  0.66899914],
 [0.57763445, 0.91074324, 0.8567405 ],
 [0.85686404, 0.815786,   0.70758235],
 [0.878826,   0.8138502,  0.8339873 ],
 [0.91127634, 0.87286097, 0.8337085 ],
 [0.89145553, 0.7747685,  0.689718  ],
 [0.9223782,  0.9091855,  0.9164217 ],
 [0.851475,   0.60009015, 0.66138256],
 [0.8984149,  0.8657093,  0.73498225],
 [0.60816103, 0.72274035, 0.57102317],
 [0.8196888,  0.22966953, 0.5617743 ],
 [0.93972325, 0.6124182,  0.84888047],
 [0.7304475,  0.1901683,  0.0        ]])


Dice_att = np.array([[0.7515952,  0.8421941,  0.7931134 ],
 [0.77739847, 0.84327114, 0.7389034 ],
 [0.93261975, 0.8987856,  0.79951674],
 [0.82559925, 0.21864545, 0.63589746],
 [0.8503121,  0.895231,   0.7840385 ],
 [0.8580909,  0.81860065, 0.787682  ],
 [0.9049378,  0.94061965, 0.847673  ],
 [0.8899778,  0.71970975, 0.7628538 ],
 [0.9336342,  0.88421863, 0.7991591 ],
 [0.79130954, 0.60812867, 0.5325162 ],
 [0.87577134, 0.92852056, 0.8282862 ],
 [0.88354063, 0.92356074, 0.8617118 ],
 [0.9384212,  0.93562555, 0.8704098 ],
 [0.91712236, 0.8914839,  0.7878254 ],
 [0.9077955,  0.89224094, 0.660585  ],
 [0.793948,   0.84776366, 0.79593265],
 [0.9266448,  0.9222201,  0.89535517],
 [0.9539824,  0.8146799,  0.8441536 ],
 [0.8886222,  0.83735126, 0.73290443],
 [0.9234968,  0.8811295,  0.8369523 ],
 [0.9416476,  0.94125056, 0.80167705],
 [0.7322792,  0.9532869,  0.9228435 ],
 [0.9229152,  0.8985486,  0.8287534 ],
 [0.9355055,  0.89737314, 0.9094799 ],
 [0.9535788,  0.9321151,  0.9093141 ],
 [0.94261324, 0.8730925,  0.81637055],
 [0.95962197, 0.9524329,  0.95638835],
 [0.9197802,  0.75007045, 0.79618335],
 [0.9464895,  0.9280216,  0.84725046],
 [0.7563435,  0.83905894, 0.7269443 ],
 [0.900911,   0.37354675, 0.71940523],
 [0.96892506, 0.759627,   0.9182643 ],
 [0.8442296,  0.31956542, 0.0        ]])

IOU_res_att = np.array([[0.6419185,  0.8137207,  0.7170585 ],
 [0.5453565,  0.6989063,  0.57257396],
 [0.8806983,  0.80860984, 0.6354675 ],
 [0.6250714,  0.3825262,  0.7001445 ],
 [0.7908703,  0.88164264, 0.7140079 ],
 [0.79836434, 0.78961265, 0.70871717],
 [0.78484267, 0.90136147, 0.7419297 ],
 [0.8115502,  0.76493365, 0.67711395],
 [0.8703472,  0.87621105, 0.70509785],
 [0.66303,    0.5965031,  0.40267336],
 [0.7755186,  0.83830756, 0.6787561 ],
 [0.82105225, 0.86281615, 0.77975667],
 [0.849283,   0.8880786,  0.7622428 ],
 [0.8560779,  0.80814904, 0.6447304 ],
 [0.8406287,  0.8024798,  0.59336245],
 [0.6938875,  0.83082795, 0.737159  ],
 [0.8708726,  0.891783,   0.82489437],
 [0.9105885,  0.7148982,  0.7205791 ],
 [0.76853144, 0.64816344, 0.46485126],
 [0.8575061,  0.8906791,  0.80684775],
 [0.93378687, 0.89639443, 0.6711587 ],
 [0.64661825, 0.9086165,  0.8480244 ],
 [0.8184167,  0.8564705,  0.7501208 ],
 [0.8397512,  0.83853966, 0.81566715],
 [0.8954743,  0.8451814,  0.81657517],
 [0.91486275, 0.8071303,  0.76018125],
 [0.91974336, 0.91778636, 0.9234188 ],
 [0.8500822,  0.50427014, 0.59277225],
 [0.92531735, 0.90058434, 0.758217  ],
 [0.63598233, 0.7283799,  0.6310076 ],
 [0.800617,   0.23366283, 0.66058683],
 [0.89720595, 0.8590839,  0.86186737],
 [0.74320906, 0.19138679, 0.0        ]])

Dice_res_att = np.array([[0.78191274, 0.8972944,  0.8352173 ],
 [0.7058003,  0.822772,   0.7281997 ],
 [0.9365652,  0.8941783,  0.7771081 ],
 [0.76928484, 0.5533728,  0.82362944],
 [0.88322455, 0.9370989,  0.83314425],
 [0.8878783,  0.88243973, 0.8295313 ],
 [0.87945306, 0.94812214, 0.851848  ],
 [0.8959732,  0.86681294, 0.8074752 ],
 [0.93067986, 0.93402183, 0.8270468 ],
 [0.7973759,  0.74726206, 0.5741513 ],
 [0.87356853, 0.9120428,  0.80864173],
 [0.9017339,  0.92635673, 0.87625086],
 [0.91849977, 0.94072205, 0.8650826 ],
 [0.922459,   0.89389646, 0.7839952 ],
 [0.9134148,  0.8904175,  0.7447928 ],
 [0.819284,   0.9075981,  0.8486949 ],
 [0.93098015, 0.9427963,  0.9040461 ],
 [0.9532021,  0.83375007, 0.83760065],
 [0.8691182,  0.7865281,  0.63467366],
 [0.9232875,  0.942179,   0.8930999 ],
 [0.9657599,  0.9453671,  0.8032256 ],
 [0.78538936, 0.95212054, 0.91776323],
 [0.9001421,  0.92268693, 0.8572218 ],
 [0.91289645, 0.9121801,  0.89847654],
 [0.94485515, 0.91609573, 0.8990271 ],
 [0.9555387,  0.89327294, 0.8637534 ],
 [0.9581941,  0.95713097, 0.9601849 ],
 [0.91896695, 0.6704515,  0.7443277 ],
 [0.9612102,  0.9476921,  0.862484  ],
 [0.77749294, 0.842847,   0.77376413],
 [0.8892696,  0.37881148, 0.7956065 ],
 [0.9458182,  0.9242013,  0.9258096 ],
 [0.8526907,  0.32128406, 0.0        ]])


IOU_WT = [IOU_bas[:,0],IOU_res[:,0],IOU_att[:,0],IOU_res_att[:,0]]

IOU_TC = [IOU_bas[:,1],IOU_res[:,1],IOU_att[:,1],IOU_res_att[:,1]]

IOU_ED = [IOU_bas[:,2],IOU_res[:,2],IOU_att[:,2],IOU_res_att[:,2]]


Dice_WT = [Dice_bas[:,0],Dice_res[:,0],Dice_att[:,0],Dice_res_att[:,0]]

Dice_TC = [Dice_bas[:,1],Dice_res[:,1],Dice_att[:,1],Dice_res_att[:,1]]

Dice_ED = [Dice_bas[:,2],Dice_res[:,2],Dice_att[:,2],Dice_res_att[:,2]]



plt.figure(figsize=(20, 12))

plt.subplot(2, 3, 1)
plt.boxplot(IOU_WT)
plt.title('Intersection over Union of Whole Tumour')
# plt.xlabel('Category')
plt.ylabel('IoU scores of WT')
plt.xticks([1, 2, 3, 4], ['U-Net3+', 'res U-Net3+', 'att U-Net3+', 'res att U-Net3+'])


plt.subplot(2, 3, 2)
plt.boxplot(IOU_TC)
plt.title('Intersection over Union of Tumour Core')
# plt.xlabel('Category')
plt.ylabel('IoU scores of TC')
plt.xticks([1, 2, 3, 4], ['U-Net3+', 'res U-Net3+', 'att U-Net3+', 'res att U-Net3+'])
 


plt.subplot(2, 3, 3)
plt.boxplot(IOU_ED)
plt.title('Intersection over Union of Enhancing Tumour')
# plt.xlabel('Category')
plt.ylabel('IoU scores of ED')
plt.xticks([1, 2, 3, 4], ['U-Net3+', 'res U-Net3+', 'att U-Net3+', 'res att U-Net3+'])



plt.subplot(2, 3, 4)
plt.boxplot(Dice_WT)
plt.title('Dice similarity coefficient of Whole Tumour')
# plt.xlabel('Category')
plt.ylabel('Dice scores of WT')
plt.xticks([1, 2, 3, 4], ['U-Net3+', 'res U-Net3+', 'att U-Net3+', 'res att U-Net3+'])


plt.subplot(2, 3, 5)
plt.boxplot(Dice_TC)
plt.title('Dice similarity coefficient of Tumour Core')
# plt.xlabel('Category')
plt.ylabel('Dice scores of TC')
plt.xticks([1, 2, 3, 4], ['U-Net3+', 'res U-Net3+', 'att U-Net3+', 'res att U-Net3+'])



plt.subplot(2, 3, 6)
plt.boxplot(Dice_ED)
plt.title('Dice similarity coefficient of Enhancing Tumour')
# plt.xlabel('Category')
plt.ylabel('Dice scores of ED')
plt.xticks([1, 2, 3, 4], ['U-Net3+', 'res U-Net3+', 'att U-Net3+', 'res att U-Net3+'])



plt.show()
